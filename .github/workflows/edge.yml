name: Deploy Bleeding Edge Image

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            cargo-registry-index
            cargo-registry-cache
            cargo-git-db
            cargo-target
          key: cache-${{ hashFiles('docker/Dockerfile') }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            cache-${{ hashFiles('docker/Dockerfile') }}-${{ hashFiles('Cargo.lock') }}
            cache-${{ hashFiles('docker/Dockerfile') }}-
            cache-

      - name: Inject cache into Docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "cargo-registry-index": "~/.cargo/registry/index/",
              "cargo-registry-cache": "~/.cargo/registry/cache/",
              "cargo-git-db": "~/.cargo/git/db",
              "cargo-target": "target/"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: Build and push the image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64, linux/arm64
          push: true
          tags: ghcr.io/yucling/aihasto-bot:edge